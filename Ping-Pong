python
import pygame
import random

pygame.init()

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

WIDTH, HEIGHT = 500, 500
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pong Pong")

class Player(GameSprite):
    def update(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_w] and paddle1.top > 0:
            paddle1.y -= 5
        if keys[pygame.K_s] and paddle1.bottom < HEIGHT:
            paddle1.y += 5
            def update(self):
        if keys[pygame.K_UP] and paddle2.top > 0:
            paddle2.y -= 5
        if keys[pygame.K_DOWN] and paddle2.bottom < HEIGHT:
            paddle2.y += 5

PADDLE_WIDTH, PADDLE_HEIGHT = 10, 60
PADDLE_BUFFER = 10

BALL_WIDTH, BALL_HEIGHT = 10, 10

BALL_X_SPEED = 3
BALL_Y_SPEED = 3

def draw_paddle(paddle):
    pygame.draw.rect(WIN, WHITE, paddle)

def draw_ball(ball):
    pygame.draw.rect(WIN, WHITE, ball)

def move_ball(ball, ball_x_speed, ball_y_speed):
    ball.x += ball_x_speed
    ball.y += ball_y_speed

    # Отскок от верхней и нижней стенки
    if ball.top <= 0 or ball.bottom >= HEIGHT:
        ball_y_speed *= -1

    return ball_x_speed, ball_y_speed

def main():
    paddle1 = pygame.Rect(PADDLE_BUFFER, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
    paddle2 = pygame.Rect(WIDTH - PADDLE_BUFFER - PADDLE_WIDTH, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
    ball = pygame.Rect(WIDTH//2 - BALL_WIDTH//2, HEIGHT//2 - BALL_HEIGHT//2, BALL_WIDTH, BALL_HEIGHT)

    clock = pygame.time.Clock()
    ball_x_speed = BALL_X_SPEED
    ball_y_speed = BALL_Y_SPEED

    run = True
    while run:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        ball_x_speed, ball_y_speed = move_ball(ball, ball_x_speed, ball_y_speed)

        WIN.fill(BLACK)
        draw_paddle(paddle1)
        draw_paddle(paddle2)
        draw_ball(ball)
        pygame.draw.aaline(WIN, WHITE, (WIDTH//2, 0), (WIDTH//2, HEIGHT))

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()

if __name__ == "__main__":
    main()
